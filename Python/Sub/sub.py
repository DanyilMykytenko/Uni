import telebot
import config
import random

from telebot import types

bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def depressed(message):
	sti = open('static/bloodTrail.webp', 'rb')

	#keyboard
	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	item1 = types.KeyboardButton("‚òë–°–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –∑–∞—á—ë—Ç?")
	item2 = types.KeyboardButton("‚òª –ö–∞–∫ –¥–µ–ª–∞?")

	markup.add(item1, item2)

	bot.send_message(message.chat.id, "–ó–¥–∞—Ä–æ–≤–∞, –∫–∞—Ä—Ç–∞, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –°—Ç—ç—Å–æ–ë–æ—Ç, —Ö–æ—á—É –ø–æ–ª—É—á–∏—Ç—å 100 –±–∞–ª–ª–æ–≤ –∏ –∂–º—É—Ä–∏–∫–∞".format(message.from_user, bot.get_me()),
		parse_mode='html', reply_markup=markup)
	bot.send_sticker(message.chat.id, sti)


@bot.message_handler(content_types=['text'])
def lalala(message):
	if message.chat.type == 'private':
		if message.text == '‚òë–°–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –∑–∞—á—ë—Ç?':
			bot.send_message(message.chat.id, str('–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ 100, —è —É–ª—å—Ç—Ä–∞-—Å–ª–∞–±—ã–π!'))
		elif message.text == "‚òª –ö–∞–∫ –¥–µ–ª–∞?":

			markup = types.InlineKeyboardMarkup(row_width=2)
			item1 = types.InlineKeyboardButton('–•–æ—Ä–æ—à–æ!', callback_data = 'good')
			item2 = types.InlineKeyboardButton('–Ø —É–ª—å—Ç—Ä–∞-—Å–ª–∞–±—ã–π', callback_data = 'bad')

			markup.add(item1, item2)

			bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –Ω–æ —è —É–ª—å—Ç—Ä–∞-—Å–ª–∞–±—ã–π! –ê —Ç—ã?', reply_markup = markup)
		else:
			bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é ‚òπ')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	try:
		if call.message:
			if call.data == 'good':
				bot.send_message(call.message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é 7Ô∏è‚É£7Ô∏è‚É£7Ô∏è‚É£!!!')
			elif call.data == 'bad':
				bot.send_message(call.message.chat.id, '–¢–∞–∑–∞—à–æ üò•')

			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–û—Ç–ª–∏—á–Ω–æ, –Ω–æ —è —É–ª—å—Ç—Ä–∞-—Å–ª–∞–±—ã–π! –ê —Ç—ã?",
                reply_markup=None)

	except Exception as e:
        	print(repr(e))
# RUN
bot.polling(none_stop=True)